package(default_visibility = ["//visibility:public"])

load("//:springboot.bzl",
        "springboot",
        "add_boot_actuator_starter",
        "add_boot_web_starter",
)

# Added all dependencies, probably not needed..
app_deps = [
"@aopalliance_aopalliance//jar",
"@ch_qos_logback_logback_classic//jar",
"@ch_qos_logback_logback_core//jar",
"@com_fasterxml_jackson_core_jackson_annotations//jar",
"@com_fasterxml_jackson_core_jackson_core//jar",
"@com_fasterxml_jackson_core_jackson_databind//jar",
"@com_fasterxml_jackson_jaxrs_jackson_jaxrs_base//jar",
"@com_fasterxml_jackson_jaxrs_jackson_jaxrs_json_provider//jar",
"@com_fasterxml_jackson_module_jackson_module_jaxb_annotations//jar",
"@com_fasterxml_jackson_module_jackson_module_paranamer//jar",
"@com_fasterxml_jackson_module_jackson_module_scala_2_11//jar",
"@com_fasterxml_classmate//jar",
"@com_github_ben_manes_caffeine_caffeine//jar",
"@com_github_zafarkhaja_java_semver//jar",
"@com_google_code_gson_gson//jar",
"@com_google_guava_guava//jar",
"@com_google_inject_guice//jar",
"@commons_beanutils_commons_beanutils//jar",
"@commons_codec_commons_codec//jar",
"@commons_collections_commons_collections//jar",
"@commons_httpclient_commons_httpclient//jar",
"@commons_io_commons_io//jar",
"@commons_lang_commons_lang//jar",
"@commons_logging_commons_logging//jar",
"@io_dropwizard_metrics_metrics_core//jar",
"@io_netty_netty//jar",
"@io_netty_netty_buffer//jar",
"@io_netty_netty_codec//jar",
"@io_netty_netty_codec_http//jar",
"@io_netty_netty_codec_http2//jar",
"@io_netty_netty_codec_socks//jar",
"@io_netty_netty_common//jar",
"@io_netty_netty_handler//jar",
"@io_netty_netty_handler_proxy//jar",
"@io_netty_netty_resolver//jar",
"@io_netty_netty_transport//jar",
"@io_netty_netty_transport_native_epoll_linux_x86_64//jar",
"@io_takari_incrementalbuild//jar",
"@io_takari_incrementalbuild_workspace//jar",
"@javax_annotation_javax_annotation_api//jar",
"@javax_inject_javax_inject//jar",
"@javax_servlet_javax_servlet_api//jar",
"@javax_validation_validation_api//jar",
"@javax_websocket_javax_websocket_api//jar",
"@javax_ws_rs_javax_ws_rs_api//jar",
"@jline_jline//jar",
"@log4j_log4j//jar",
"@org_apache_commons_commons_lang3//jar",
"@org_apache_httpcomponents_httpclient//jar",
"@org_apache_httpcomponents_httpcore//jar",
"@org_apache_thrift_libthrift//jar",
"@org_apache_tomcat_embed_tomcat_embed_core//jar",
"@org_apache_tomcat_embed_tomcat_embed_el//jar",
"@org_apache_tomcat_embed_tomcat_embed_websocket//jar",
"@org_aspectj_aspectjrt//jar",
"@org_aspectj_aspectjweaver//jar",
"@org_bouncycastle_bcpkix_jdk15on//jar",
"@org_bouncycastle_bcprov_jdk15on//jar",
"@org_codehaus_jackson_jackson_core_asl//jar",
"@org_codehaus_jackson_jackson_mapper_asl//jar",
"@org_codehaus_janino_commons_compiler//jar",
"@org_codehaus_janino_janino//jar",
"@org_eclipse_jetty_websocket_javax_websocket_client_impl//jar",
"@org_eclipse_jetty_websocket_javax_websocket_server_impl//jar",
"@org_eclipse_jetty_websocket_websocket_api//jar",
"@org_eclipse_jetty_websocket_websocket_client//jar",
"@org_eclipse_jetty_websocket_websocket_common//jar",
"@org_eclipse_jetty_websocket_websocket_server//jar",
"@org_eclipse_jetty_websocket_websocket_servlet//jar",
"@org_eclipse_jetty_jetty_annotations//jar",
"@org_eclipse_jetty_jetty_client//jar",
"@org_eclipse_jetty_jetty_continuation//jar",
"@org_eclipse_jetty_jetty_http//jar",
"@org_eclipse_jetty_jetty_io//jar",
"@org_eclipse_jetty_jetty_plus//jar",
"@org_eclipse_jetty_jetty_rewrite//jar",
"@org_eclipse_jetty_jetty_security//jar",
"@org_eclipse_jetty_jetty_server//jar",
"@org_eclipse_jetty_jetty_servlet//jar",
"@org_eclipse_jetty_jetty_servlets//jar",
"@org_eclipse_jetty_jetty_util//jar",
"@org_eclipse_jetty_jetty_webapp//jar",
"@org_eclipse_jetty_jetty_xml//jar",
"@org_freemarker_freemarker//jar",
"@org_glassfish_hk2_external_aopalliance_repackaged//jar",
"@org_glassfish_hk2_external_asm_all_repackaged//jar",
"@org_glassfish_hk2_external_javax_inject//jar",
"@org_glassfish_hk2_class_model//jar",
"@org_glassfish_hk2_config_types//jar",
"@org_glassfish_hk2_hk2//jar",
"@org_glassfish_hk2_hk2_api//jar",
"@org_glassfish_hk2_hk2_config//jar",
"@org_glassfish_hk2_hk2_core//jar",
"@org_glassfish_hk2_hk2_locator//jar",
"@org_glassfish_hk2_hk2_runlevel//jar",
"@org_glassfish_hk2_hk2_utils//jar",
"@org_glassfish_hk2_osgi_resource_locator//jar",
"@org_glassfish_hk2_spring_bridge//jar",
"@org_glassfish_jersey_bundles_repackaged_jersey_guava//jar",
"@org_glassfish_jersey_containers_jersey_container_servlet//jar",
"@org_glassfish_jersey_containers_jersey_container_servlet_core//jar",
"@org_glassfish_jersey_core_jersey_client//jar",
"@org_glassfish_jersey_core_jersey_common//jar",
"@org_glassfish_jersey_core_jersey_server//jar",
"@org_glassfish_jersey_ext_jersey_entity_filtering//jar",
"@org_glassfish_jersey_ext_jersey_spring3//jar",
"@org_glassfish_jersey_media_jersey_media_jaxb//jar",
"@org_glassfish_jersey_media_jersey_media_json_jackson//jar",
"@org_glassfish_javax_el//jar",
"@org_hdrhistogram_HdrHistogram//jar",
"@org_hibernate_hibernate_validator//jar",
"@org_javassist_javassist//jar",
"@org_jboss_logging_jboss_logging//jar",
"@org_jvnet_tiger_types//jar",
"@org_mortbay_jasper_apache_el//jar",
"@org_mpierce_metrics_reservoir_hdrhistogram_metrics_reservoir//jar",
"@org_objenesis_objenesis//jar",
"@org_ow2_asm_asm//jar",
"@org_ow2_asm_asm_commons//jar",
"@org_ow2_asm_asm_tree//jar",
"@org_scala_lang_scala_library//jar",
"@org_scala_lang_scala_reflect//jar",
"@org_slf4j_jcl_over_slf4j//jar",
"@org_slf4j_jul_to_slf4j//jar",
"@org_slf4j_log4j_over_slf4j//jar",
"@org_slf4j_slf4j_api//jar",
"@org_springframework_boot_spring_boot//jar",
"@org_springframework_boot_spring_boot_actuator//jar",
"@org_springframework_boot_spring_boot_autoconfigure//jar",
"@org_springframework_boot_spring_boot_configuration_processor//jar",
"@org_springframework_boot_spring_boot_loader//jar",
"@org_springframework_boot_spring_boot_starter//jar",
"@org_springframework_boot_spring_boot_starter_actuator//jar",
"@org_springframework_boot_spring_boot_starter_jdbc//jar",
"@org_springframework_boot_spring_boot_starter_jetty//jar",
"@org_springframework_boot_spring_boot_starter_logging//jar",
"@org_springframework_boot_spring_boot_starter_security//jar",
"@org_springframework_boot_spring_boot_starter_tomcat//jar",
"@org_springframework_boot_spring_boot_starter_web//jar",
"@org_springframework_security_spring_security_config//jar",
"@org_springframework_security_spring_security_core//jar",
"@org_springframework_security_spring_security_web//jar",
"@org_springframework_spring_aop//jar",
"@org_springframework_spring_aspects//jar",
"@org_springframework_spring_beans//jar",
"@org_springframework_spring_context//jar",
"@org_springframework_spring_core//jar",
"@org_springframework_spring_expression//jar",
"@org_springframework_spring_jdbc//jar",
"@org_springframework_spring_tx//jar",
"@org_springframework_spring_web//jar",
"@org_springframework_spring_webmvc//jar",
"@org_yaml_snakeyaml//jar",
    ]

# Convenience Methods for Adding Entire Starters
add_boot_actuator_starter(app_deps)
add_boot_web_starter(app_deps)

# Build the app
springboot(
    name = "application",
    boot_app_class = "sample.Application",
    deps = app_deps,
    resources = glob([
        "src/main/resources/*.properties",
        ]),
)

